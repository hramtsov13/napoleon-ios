//Отсортировать массив чисел таким образом, чтобы сначала шли все четные числа по возрастанию, затем все нечетные по убыванию. Вы можете использовать любой язык программирования. В ответ прикрепите ссылку на открытый репозиторий с итоговым кодом вашего решения.
//Пример: Входные данные: [3, 4, 1, 2, 16, 27, 13]. Выходные данные: [2, 4, 16, 27, 13, 3, 1].

// let array = [3, 4, 1, 2, 16, 27, 13];
// let odd = [];
// let even = [];

// for (let i = 0; i < array.length; i++) {
//   if (array[i] % 2 === 0) {
//     even.push(array[i]);
//   } else {
//     odd.push(array[i]);
//   }
// }

// const sortOrder = (a, b) => a - b;

// even.sort(sortOrder);
// odd.sort(sortOrder).reverse();

// let orderedArray = even.concat(odd);

// console.log(orderedArray);
------------------------------------------------------

//На вход подается число. Необходимо проверить, является ли это число палиндромом (то есть одинаково читается как слева направо, так и справа налево). Нельзя использовать строки и встроенные функции языка программирования. Вы можете использовать любой язык программирования. В ответ прикрепите ссылку на открытый репозиторий с итоговым кодом вашего решения.

// const palindrom = (number) => {
//   return number === number.split('').reverse().join('');
// };

// let number = prompt('Введите число:');

// alert(palindrom(number));

